ls
setwd("~/Desktop/RepData_PeerAssessment1/")
setwd("~/Desktop/RepData_PeerAssessment1/")
unzip("activity.zip")
my_data <- read.csv("activity.csv", sep=";")
head(my_data)
my_data$interval
setwd("~/Desktop/RepData_PeerAssessment1/")
unzip("activity.zip")
my_data <- read.csv("activity.csv", sep=",")
my_data
head(my_data)
my_dat$interval
my_data$interval
is.numeric(my_data$interval)
is.character(my_data$interval)
is.character(my_data$date)
is.numeric(my_data$date)
type(my_data$date)
str(my_data)
my_data$interval
dates <- as.Date(my_data$date, format = "%Y-%m-%d")
my_data$date <- dates
str(my_data)
bu <- my_data$steps ~ my_data$date
bu
aggregate(my_data$steps ~ my_data$date, my_data, sum)
aggr_by_date <- aggregate(my_data$steps ~ my_data$date, my_data, sum)
aggr_by_date <- aggregate(my_data$steps ~ my_data$date, my_data, sum)
sum_by_date <- aggregate(my_data$steps ~ my_data$date, my_data, sum)
median_by_date <- aggregate(my_data$steps ~ my_data$date, my_data, median)
mean_by_date <- aggregate(my_data$steps ~ my_data$date, my_data, mean)
median_by_date
mean_by_date
median_by_date <- aggregate(my_data$steps ~ my_data$date, my_data, fun=median)
median_by_date <- aggregate(my_data$steps ~ my_data$date, my_data, FUN=median)
median_by_date
my_data$date
my_data$steps
sum_by_date <- aggregate(my_data$steps ~ my_data$date, my_data, sum)
sum_by_date$steps
sum_by_date <- aggregate(my_data$steps ~ my_data$date, my_data, sum)
sum_by_date
sum_by_date$my_data$steps
hist(sum_by_datesum$my_data$steps, col="red", xlab="Day", xlab="Steps" main="Total number of steps taken each day")
sum_by_date$my_data$steps
hist(sum_by_date$my_data$steps, col="red", xlab="Day", xlab="Steps" main="Total number of steps taken each day")
hist()
sum_by_date$my_data$steps
sum_by_date <- aggregate(my_data$steps ~ my_data$date, my_data, sum)
sum_by_date$my_data$steps
sum_by_date
sum_by_date$my_data$date
sum_by_date[1]
sum_by_date[2]
hist(sum_by_date[$my_data$step]2]s, col="red", xlab="Day", xlab="Steps" main="Total number of steps taken each day")
hist(sum_by_date[sum_by_date[2], col="red", xlab="Day", xlab="Steps" main="Total number of steps taken each day")
hist(sum_by_date[2], col="red", xlab="Day", xlab="Steps" main="Total number of steps taken each day")
hist(sum_by_date, col="red", xlab="Day", xlab="Steps" main="Total number of steps taken each day")
hist(sum_by_date, col="red", xlab="Day", xlab="Steps", main="Total number of steps taken each day")
hist(sum_by_date, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day")
hist(sum_by_date$steps, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day")
hist(sum_by_date[2], col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day")
sum_by_date[2]
hist(sum_by_date[2], col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day")
hist(as.numeric(sum_by_date[2]), col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day")
daily_steps <- split(my_data$steps, my_data$date)
daily_steps
sum_by_date <- sum(daily_steps)
sum_by_date <- sapply(daily_steps, sum)
sum_by_date
hist(sum_by_date, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day")
sum_by_date
sum_by_date
sum_by_date
str(sum_by_date)
hist(cbind(my_data$date, sum_by_date), col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day")
rbind(my_data$date, sum_by_date)
cbind(my_data$date, sum_by_date)
sum_by_date
summary(sum_by_date)
str(sum_by_date)
sum_by_date<-  tapply(ddaily_steps, sum)
sum_by_date<-  tapply(daily_steps, sum)
sum_by_date<-  tapply(daily_steps, my_data$date, sum)
daily_steps <- split(my_data$steps, my_data$date)
daily_steps <- split(my_data$steps, my_data$date)
daily_steps
?tapply
sum_by_date<-  tapply(daily_steps, sum)
sum_by_date<-  tapply(daily_steps, daily_steps, sum)
?saply
?sapply
sum_by_date <- sapply(daily_steps, sum)
sum_by_date
sum_by_date <- vapply(daily_steps, sum)
?lapply
sum_by_date <- vapply(daily_steps, sum)
sum_by_date <- sapply(daily_steps, sum)
sum_by_date
?lapply
sum_by_date <- lapply(daily_steps, sum)
sum_by_date
sum_by_datesum_by_date<- aggregate(my_data$steps, my_data$date, mean)
sum_by_date<- aggregate(my_data$steps, my_data$date, mean)
sum_by_date<- aggregate(my_data$steps~ my_data$date, mean)
sum_by_date<- aggregate(steps ~ date, data=my_data, FUN=sum)
sum_by_date
hist(sum_by_date, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day")
sum_by_date
sum_by_date$date
sum_by_date$steps
hist(sum_by_date$steps, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day")
hist(sum_by_date$steps, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day", breaks = sum_by_date$date)
hist(sum_by_date$steps, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day")
sum_by_date$date
hist(sum_by_date$steps, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day", break=sum_by_date$date)
sum_by_date$date
len(sum_by_date$date)
length(sum_by_date$date)
sum_by_date$steps
hist(sum_by_date$steps, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day", breaks=sum_by_date$date)
hist(sum_by_date$steps, breaks=sum_by_date$datecol="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day" )
hist(sum_by_date$steps, breaks=sum_by_date$date, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day" )
breaks <- sum_by_date$date
hist(sum_by_date$steps, breaks=breaks, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day" )
breaks
breaks<-strptime(sum_by_date$date, format = "%Y-%m-%d")
hist(sum_by_date$steps, breaks=breaks, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day" )
breaks<-strptime(sum_by_date$date, format = "%Y-%m-%d")
breaks
hist(sum_by_date$steps, labels=breaks, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day" )
breaks<-strptime(sum_by_date$date, format = "%Y-%m-%d")
hist(sum_by_date$steps, labels=breaks, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day" )
hist(sum_by_date$steps, labels=breaks, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day" )
hist(sum_by_date$steps, breaks=length(breaks), labels=breaks, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day" )
hist(sum_by_date$steps, breaks=length(breaks), xlab=breaks, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day" )
hist(sum_by_date$steps, breaks=length(breaks), xlab=breaks, col="red",  ylab="Steps", main="Total number of steps taken each day" )
hist(sum_by_date$steps, breaks="days", xlab=breaks, col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day" )
hist(sum_by_date$steps, breaks="days", col="red", xlab="Day", ylab="Steps", main="Total number of steps taken each day" )
random.dates <- as.Date("2001/1/1") + 70*stats::runif(100)
hist(random.dates, "weeks", format = "%d %b")
random.dates
hist(mydata$date,  col="red")
hist(my_data$date,  col="red")
my_data$date
hist(my_data$date)
hist(my_data$date, breaks= 50)
hist(my_data$date, breaks= length(sum_by_date$date))
breaks= length(sum_by_date$date)
length(sum_by_date$date)
my_data$date
hist(my_data$date, breaks= length(sum_by_date$date))
hist(my_data$date, breaks= "days")
hist(my_data$date, breaks= "days")
?barplot
barplot(sum_by_date, names.arg=my_data$date)
ggplot(DF, aes(x=obs, fill=fill)) +
geom_histogram(binwidth=1, colour="black", position="dodge") +
scale_fill_identity()
ggplot(DF, aes(x=obs, fill=fill)) +
geom_histogram(binwidth=1, colour="black", position="dodge") +
scale_fill_identity()
ggplot(my_data)
ggplot2(my_data)
install.packages("ggplot2")
library("ggplot2")
ggplot(sum_by_date)
sum_by_date
ggplot(sum_by_date)
ggplot(sum_by_date, aes(x))
ggplot(DF, aes(x=obs, fill=fill)) +
geom_histogram(binwidth=1, colour="black", position="dodge") +
scale_fill_identity()
ggplot(my_data, aes(x=obs, fill=fill)) +
geom_histogram(binwidth=1, colour="black", position="dodge") +
scale_fill_identity()
ggplot(my_data, aes(x=my_data$date, fill=fill)) +
geom_histogram(binwidth=1, colour="black", position="dodge") +
scale_fill_identity()
ggplot(my_data, aes(x=my_data$date)) +
geom_histogram(binwidth=1, colour="black", position="dodge") +
scale_fill_identity()
sum_by_date
ggplot(my_data$steps, aes(x=my_data$date)) +
geom_histogram(binwidth=1, colour="black", position="dodge") +
scale_fill_identity()
hist(sum_by_date$steps)
hist(sum_by_date$steps, xlab="Average steps", ylab="Frequence")
hist(sum_by_date$steps, xlab="Average step", ylab="Frequence")
hist(sum_by_date$steps, xlab="Sum of daily steps", ylab="Frequence")
hist(sum_by_date$steps, xlab="Sum of daily steps", ylab="Frequence", col="red")
my_data
my_data
head(my_data)
mean_by_date
aggregate(interval ~ date, my_data)
aggregate(interval ~ date, my_data, FUN=mean)
aggregate(step~ interval + date, my_data, FUN=mean)
aggregate(steps~ interval + date, my_data, FUN=mean)
aggregate(steps~ interval, my_data, FUN=mean)
aggregate(steps~ interval, my_data, FUN=mean)
aggregate(steps~ interval, my_data, FUN=mean)
re <- aggregate(steps~ interval, my_data, FUN=mean)
plot(re)
plot(re, type="l")
steps_by_interval <- aggregate(steps ~ interval, my_data, FUN=mean)
plot(steps_by_interval, type="l")
plot(steps_by_interval, type="l", xlab ="Interval", ylab="Average of steps")
new_DF <- DF[(is.na(DF$Var),]
nu <- my_data[is.na(my_data)]
nu
nu <- my_data[is.na(my_data),]
nu
nu <- my_data[,is.na(my_data)]
nu <- my_data[is.na(my_data),]
nu <- my_data[is.na(my_data),]
length(nu)
nu
nu <- my_data[,is.na(my_data)]
nu <- my_data[is.na(my_data),]
is.na(my_data)
my_data <- read.csv("activity.csv", sep=",")
dates <- as.Date(my_data$date, format = "%Y-%m-%d")
my_data$date <- dates
daily_steps <- split(my_data$steps, my_data$date)
is.na(my_data)
nu <- my_data[is.na(my_data),]
size(nu)
nu
head(nu)
nrow(nu)
nu <- my_data[!is.na(my_data),]
nrow(nu)
nrow(complete.cases(my_data))
complete.cases(my_data)
complete.cases(my_data)
nrow(complete.cases(my_data))
length(complete.cases(my_data))
sum(complete.cases(my_data))
nrow(nu)
nu <- my_data[!is.na(my_data),]
nu <- my_data[is.na(my_data),]
nrow(nu)
nu <- my_data[!is.na(my_data),]
nrow(nu)
n_mis <- my_data[!is.na(my_data),]
n_mis2 <- sum(complete.cases(my_data))
n_mis <- my_data[!is.na(my_data),]
n_mis2 <- sum(complete.cases(my_data))
n_mis
n_mis <- nrow(my_data[!is.na(my_data),])
n_mis2 <- sum(complete.cases(my_data))
n_mis
n_mis2 <- sum(!complete.cases(my_data))
n_mis2
n_mis <- nrow(my_data[!is.na(my_data),])
n_mis2 <- sum(!complete.cases(my_data))
n_mis
n_mis <- nrow(my_data[is.na(my_data),])
n_mis2 <- sum(!complete.cases(my_data))
n_mis
n_mis <- nrow(my_data[is.na(my_data),])
n_mis2 <- sum(!complete.cases(my_data))
n_mis
n_mis2
steps_by_interval <- aggregate(steps ~ interval, my_data, FUN=mean)
steps_by_interval
max(steps_by_interval$steps)
which.max(steps_by_interval$steps)
index <- which.max(steps_by_interval$steps)
steps_by_interval[104]
steps_by_interval$interval[104]
na_data <- my_data[is.na(my_data),]
na_data
steps_by_interval$interval
steps_by_interval
steps_by_interval == 5
which(steps_by_interval == 5)
which(steps_by_interval == 105)
which(steps_by_interval$interval == 105)
which(steps_by_interval$interval == 1053)
na_data <- my_data[is.na(my_data),]
which(average_steps_by_interval$interval == na_data$interval)
average_steps_by_interval <- aggregate(steps ~ interval, my_data, FUN=mean)
index <- which.max(steps_by_interval$steps)
average_steps_by_interval$interval[index]
\na_data <- my_data[is.na(my_data),]
index <- which(average_steps_by_interval$interval == no_data$interval)
na_data$steps <- which(average_steps_by_interval$interval == na_data$interva)
n_mis <- nrow(my_data[is.na(my_data),])
na_data <- my_data[is.na(my_data),]
index <- which(average_steps_by_interval$interval == na_data$interval)
index
na_data$interval
average_steps_by_interval$interval
average_steps_by_interval
na_data <- my_data[is.na(my_data),]
index <- which(average_steps_by_interval$interval == na_data$interval)
na_data$steps <- average_steps_by_interval[index]
average_steps_by_interval[index,]
average_steps_by_interval
average_steps_by_interval[1,]
average_steps_by_interval[2,]
average_steps_by_interval[3,]
index
average_steps_by_interval
average_steps_by_interval[average_steps_by_interval$interval == na_data$interval]
na_data
which(average_steps_by_interval$interval == na_data$interval)
index <- which(na_data$interval == average_steps_by_interval$interval)
index
na_data
na_data$interval == average_steps_by_interval$interval
head(na_data)
head(average_steps_by_interval)
merge(na_data[, c("steps", "date, "interval")], average_steps_by_interval, by="interval")
merge(na_data[, c("steps", "date", "interval")], average_steps_by_interval, by="interval")
merge(na_data[, c("steps", "date", "interval")], average_steps_by_interval, by="interval")
head(merge(na_data[, c("steps", "date", "interval")], average_steps_by_interval, by="interval"))
merge(na_data[, c("date", "interval")], average_steps_by_interval, by="interval")
head(merge(na_data[, c("date", "interval")], average_steps_by_interval, by="interval"))
?merge
na_data
merged_data <- merge(na_data[, c("date", "interval")], average_steps_by_interval, by="interval")
merged_data
no_data
na_data
no_data
na_data
merged_data <- merge(na_data, average_steps_by_interval, by="interval")
merged_data
head(merged_data)
head(na_data)
merged_data[with(merged_data, order(date, interval)), ]
head(merged_data)
merged_data <- merge(na_data[,c("interval", "date")], average_steps_by_interval, by="interval")
merged_data
my_data
my_data[order(interval, date)]
head(my_data)
my_data[order(date, interval),]
my_data[order(my_data$date, my_data$interval),]
my_data[is.na(my_data[order(my_data$interval, my_data$date, ),])]
my_data[is.na(my_data[order(my_data$interval, my_data$date ),])]
my_data[is.na(my_data[order(my_data$interval, my_data$date ),]),]
my_data[is.na(my_data,)]
my_data[is.na(my_data),]
merged_data <- merge(na_my_data[,c("interval", "date")], average_steps_by_interval, by="interval")
not_na_my_data <- my_data[!is.na(my_data),]
na_my_data <- my_data[!is.na(my_data),]
merged_data <- merge(na_my_data[,c("interval", "date")], average_steps_by_interval, by="interval")
merged_data
haed(merged_data)
head(merged_data)
head(not_my_data)
head(not_my_data)
not_na_my_data
head(not_na_my_data)
rbind(not_na_my_data[,v_columns], merged_data[, v_columns])
v_columns <- c("steps", "date", "interval");
rbind(not_na_my_data[,v_columns], merged_data[, v_columns])
rbind(not_na_my_data[,v_columns], merged_data[, v_columns])daily_steps <- split(new_data, new_data)
sum_by_date<- aggregate(steps ~ date, data=new_data, FUN=sum)
breaks <- sum_by_date$date
breaks<-strptime(sum_by_date$date, format = "%Y-%m-%d")
hist(sum_by_date$steps, xlab="Sum of daily steps", ylab="Frequence", col="red")
median_by_date <- aggregate(new_data$steps ~ new_data$date, new_data, FUN=median)
mean_by_date <- aggregate(new_data$steps ~ new_data$date, new_data, mean)
median_by_date
mean_by_date
median_by_date
mean_by_date
?weekdays
weekdays(new_data$date)
new_data <- rbind(not_na_my_data[,v_columns], merged_data[, v_columns])
weekdays(new_data$date)
weekdays(new_data$date)
?cut
weekdays(new_data$date)
as.factor(weekdays(new_data$date))
levels(as.factor(weekdays(new_data$date))
)
data = c(1,2,2,3,1,2,3,3,1,2,3,3,1)
fdata = factor(data)
factor
fdata
mons = c("March","April","January","November","January",
+ "September","October","September","November","August",
+ "January","November","November","February","May","August",
+ "July","December","August","August","September","November",
+ "February","April")
mons = c("March","April","January","November","January",
"September","October","September","November","August",
"January","November","November","February","May","August",
"July","December","August","August","September","November",
"February","April")
mons = factor(mons)
mons
fre <- c("weekday", "weekday", "weekday", "weekday", "weekday", "weekend", "weekend")
factor(fre)
weekdays(new_data$date)
factor(fre)
?factor
as.POSIXlt(df$date)$wday
as.POSIXlt(new_data$date)$wday
as.POSIXlt(new_data$date)$wday
as.POSIXlt(new_data$date)$wday
fa <- factor(weekdays(new_data$date))
fa
fa <- factor(weekdays(new_data$date))
levels(fa)=c("weekday", "weekday","weekday","weekday","weekday","weekend","weekend")
fa
levels(fa)=c("weekday", "weekday","weekday","weekday","weekday","weekend","weekend")
plot(steps_by_interval ~ factoe, type="l", xlab ="Interval", ylab="Average of steps")
plot(steps_by_interval ~ fa, type="l", xlab ="Interval", ylab="Average of steps")
plot(average_steps_by_interval ~ fa, type="l", xlab ="Interval", ylab="Average of steps")
plot(average_steps_by_interval, type="l", xlab ="Interval", ylab="Average of steps")
plot(average_steps_by_interval,average_steps_by_interval, type="l", xlab ="Interval", ylab="Average of steps")
average_steps_by_interval_weekdays <- aggregate(steps ~ interval + fa, my_data, FUN=mean)
average_steps_by_interval_weekdays <- aggregate(steps ~   fa, my_data, FUN=mean)
average_steps_by_interval_weekdays
average_steps_by_interval
average_steps_by_interval <- aggregate(steps ~ interval, my_data, FUN=mean)
average_steps_by_interval
my_data
average_steps_by_interval <- aggregate(steps ~ interval, my_data, FUN=mean)
newaverage_steps_by_interval <- aggregate(steps ~ interval, my_data, FUN=mean)
average_steps_by_interval <- aggregate(steps ~ interval, new_data, FUN=mean)
average_steps_by_interval
average_steps_by_interval <- aggregate(steps ~ interval + fa, new_data, FUN=mean)
average_steps_by_interval
plot(average_steps_by_interval, type="l", xlab ="Interval", ylab="Average of
)
")"
"
plot(average_steps_by_interval, type="l", xlab ="Interval", ylab="Average ofsteps")
average_steps_by_interval <- aggregate(steps ~ interval, my_data, FUN=mean)
average_steps_by_interval
plot(average_steps_by_interval, type="l", xlab ="Interval", ylab="Average ofsteps")
average_steps_by_interval <- aggregate(steps ~ interval + fa, my_data, FUN=mean)
average_steps_by_interval <- aggregate(steps ~ interval , new_data, FUN=mean)
plot(average_steps_by_interval, type="l", xlab ="Interval", ylab="Average ofsteps")
average_steps_by_interval <- aggregate(steps ~ interval + fa , new_data, FUN=mean)
plot(average_steps_by_interval, type="l", xlab ="Interval", ylab="Average ofsteps")
average_steps_by_interval
fa <- factor(weekdays(new_data$date))
levels(fa) = c("weekday", "weekday", "weekday", "weekday", "weekday", "weekend", "weekend")
average_steps_by_interval <- aggregate(steps ~ interval + fa , new_data, FUN=mean)
fa <- factor(weekdays(new_data$date))
fa
levels(fa) = c("weekday", "weekday", "weekday", "weekday", "weekday", "weekend", "weekend")
fa
fa
summary(fa)
str(fa)
new_data$weekdaytype = as.factor(weekdays(new_data$date))
new_data$weekdaytype
levels(new_data$weekdaytype) <- c("weekday", "weekday", "weekday", "weekday", "weekday", "weekend", "weekend")
new_data$weekdaytype
average_steps_by_interval <- aggregate(steps ~ interval + weekday , new_data, FUN=mean)
new_data$weekdaytype
average_steps_by_interval <- aggregate(steps ~ interval + weekdaytype , new_data, FUN=mean)
plot(average_steps_by_interval, type="l", xlab ="Interval", ylab="Average ofsteps")
average_steps_by_interval
average_steps_by_interval[,weekdaytype=="weekday"]
average_steps_by_interval[weekdaytype=="weekday"]
average_steps_by_interval[,average_steps_by_interval$weekdaytype=="weekday"]
average_steps_by_interval[average_steps_by_interval$weekdaytype=="weekday",]
plot(average_steps_by_interval[average_steps_by_interval$weekdaytype=="weekday",], type="l", xlab ="Interval", ylab="Average ofsteps")
plot(average_steps_by_interval[average_steps_by_interval[$weekdaytype=="weekday",], type="l", xlab ="Interval", ylab="Average ofsteps")
plot(average_steps_by_interval[average_steps_by_interval$weekdaytype=="weekday",], type="l", xlab ="Interval", ylab="Average ofsteps")
average_steps_by_interval[average_steps_by_interval$weekdaytype=="weekday",]
av_weekend <- average_steps_by_interval[average_steps_by_interval$weekdaytype=="weekday",]
plot(av_weekend[,c("interval", "step")], type="l", xlab ="Interval", ylab="Average ofsteps")
av_weekend <- average_steps_by_interval[average_steps_by_interval$weekdaytype=="weekday",]
head(av_weekend)
plot(av_weekend[,c("interval", "steps")], type="l", xlab ="Interval", ylab="Average ofsteps")
new_data$weekdaytype = as.factor(weekdays(new_data$date))
levels(new_data$weekdaytype) = c("weekday", "weekday", "weekday", "weekday", "weekday", "weekend", "weekend")
average_steps_by_interval <- aggregate(steps ~ interval + weekdaytype , new_data, FUN=mean)
avs_by_interval_and_type <- aggregate(steps ~ interval + weekdaytype , new_data, FUN=mean)
av_weekday <- avs_by_interval_and_type[avs_by_interval_and_type$weekdaytype=="weekday",]
av_weekend <- avs_by_interval_and_type[avs_by_interval_and_type$weekdaytype=="weekend",]
plot(av_weekday[,c("interval", "steps")], type="l", xlab ="Interval", ylab="Average ofsteps")
line(av_weekend[,c("interval", "steps")], type="l", xlab ="Interval", ylab="Average ofsteps")
plot(av_weekday[,c("interval", "steps")], type="l", xlab ="Interval", ylab="Average ofsteps")
lines(av_weekend[,c("interval", "steps")], type="l", xlab ="Interval", ylab="Average ofsteps")
plot(av_weekday[,c("interval", "steps")], type="l", xlab ="Interval", ylab="Average ofsteps")
plot(av_weekend[,c("interval", "steps")], type="l", xlab ="Interval", ylab="Average ofsteps")
na_my_data$steps <- average_steps_by_interval[average_steps_by_interval$interval == na_my_data$interval]
not_na_my_data <- my_data[!is.na(my_data),]
na_my_data <- my_data[!is.na(my_data),]
index <- which(na_my_data$interval == average_steps_by_interval$interval)
na_my_data$steps <- average_steps_by_interval[average_steps_by_interval$interval == na_my_data$interval]
head( average_steps_by_interval)
head( average_steps_by_intervalI$i
ave\
average_steps_by_interval$interval
na_my_data$steps <- average_steps_by_interval[average_steps_by_interval$interval == na_my_data$interval]
na_my_data$steps <- average_steps_by_interval[average_steps_by_interval$interval == na_my_data$interval,]
not_na_my_data <- my_data[!is.na(my_data),]
na_my_data <- my_data[!is.na(my_data),]
index <- which(na_my_data$interval == average_steps_by_interval$interval)
merged_data <- merge(na_my_data[,c("interval", "date")], average_steps_by_interval, by = "interval")
new_data$weekdaytype = as.factor(weekdays(new_data$date))
levels(new_data$weekdaytype) = c("weekday", "weekday", "weekday", "weekday", "weekday", "weekend", "weekend")
avs_by_interval_and_type <- aggregate(steps ~ interval + weekdaytype , new_data, FUN=mean)
av_weekday <- avs_by_interval_and_type[avs_by_interval_and_type$weekdaytype=="weekday",]
av_weekend <- avs_by_interval_and_type[avs_by_interval_and_type$weekdaytype=="weekend",]
plot(av_weekday[,c("interval", "steps")], type="l", xlab ="Interval", ylab="Average ofsteps")
plot(av_weekend[,c("interval", "steps")], type="l", xlab ="Interval", ylab="Average ofsteps")
